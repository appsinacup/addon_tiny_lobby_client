#!/usr/bin/env python
from misc.utility.scons_hints import *
import os

Import("env")
Import("env_modules")


#region Helpers
def get_addon_platform():
    return env["platform"].replace("linuxbsd", "linux")

os.system(f"scons static_build=yes platform={get_addon_platform()} target={env["target"]} arch={env["arch"]} precision={env["precision"]} threads={env["threads"]} dev_build={env["dev_build"]} use_llvm={env.get("use_llvm", 'no')}")
# Do an ls on bin folder
os.system("ls -l bin/")
# Do an ls on godot-cpp/bin folder
#endregion

env_tiny_lobby = env_modules.Clone()

def get_sufix():
    suffix = f".{get_addon_platform()}.{env["target"]}"
    if env["dev_build"]:
        suffix += ".dev"
    if env["precision"] == "double":
        suffix += ".double"
    suffix += f".{env["arch"]}"
    if env["threads"] == "no":
        suffix += ".nothreads"
    return suffix

if env["platform"] == "ios":
    env_tiny_lobby.Append(LIBPATH=["#modules/tiny_lobby/bin", "#modules/tiny_lobby/godot-cpp/bin"])
    env_tiny_lobby.Append(LIBS=[f"libtiny_lobby{get_sufix()}", f"libgodot-cpp{get_sufix()}"])
elif env["platform"] != "windows":
    env.Append(LIBPATH=["#modules/tiny_lobby/bin", "#modules/tiny_lobby/godot-cpp/bin"])
    env.Append(LIBS=[f"libtiny_lobby{get_sufix()}", f"libgodot-cpp{get_sufix()}"])
else:
    env.Append(LIBPATH=["#modules/tiny_lobby/bin", "#modules/tiny_lobby/godot-cpp/bin"])
    env.Append(LIBS=["tiny_lobby", "godot-cpp"])


#module_obj = []

#env_tiny_lobby.add_source_files(module_obj, "register_types.cpp")
env.add_source_files(env.modules_sources, "register_types.cpp")

#env.modules_sources += module_obj
